"""empty message

Revision ID: 6b5654e65a10
Revises: 
Create Date: 2024-02-06 18:47:36.697805

"""
from alembic import op
import sqlalchemy as sa
import fastapi_utils


# revision identifiers, used by Alembic.
revision = '6b5654e65a10'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ms_role',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ms_food_category',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ms_restaurant',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ms_food',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('category_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('restaurant_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('food_image', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['ms_food_category.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['restaurant_id'], ['ms_restaurant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ms_user',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('role_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ms_role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('food_log',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('food_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('user_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['ms_food.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['ms_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('order_and_payments',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('payment_status', sa.Integer(), nullable=False),
    sa.Column('order_status', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('payment_acceptance_log',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('order_and_payments_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('user_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['order_and_payments_id'], ['order_and_payments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ms_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('food_transactions',
    sa.Column('id', fastapi_utils.guid_type.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('food_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('order_id', fastapi_utils.guid_type.GUID(), nullable=False),
    sa.Column('total_item', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['ms_food.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['order_and_payments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['ms_user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('food_transactions')
    op.drop_table('payment_acceptance_log')
    op.drop_table('order_and_payments')
    op.drop_table('food_log')
    op.drop_table('ms_user')
    op.drop_table('ms_food')
    op.drop_table('ms_restaurant')
    op.drop_table('ms_food_category')
    op.drop_table('ms_role')
    # ### end Alembic commands ###
